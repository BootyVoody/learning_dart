// Константы - const and final

void main() {
  // const - тип, является константой временной компиляции. Если установили значение, то менять его уже нельзя.
  // Константа временной компиляции означает, что ей нельзя присвоить значение, которое будет возвращать функцию, т.е
  // значение, которое будет вычисляться во время выполнения программы.
  // В const можно устанавливать значения, которые всегда определны однозначно.
  const name = 'Codeandart';
  // name = 1234; !Ошибка! изменить константу нельзя

  const os = 'Android';
  const age = 30;
  const value = 2 + 2;
  const double cost = 5.55;

  const collectionOfDouble = [12.22, cost]; // присвоить cost листу collectionOfDouble можно, т.к значение cost = double и лист тоже double

  // const someValue = getDoubleValue(); !Ошибка! не можем присовить вычисляемое значение нашей константной переменной

  // final - тип, похожа на const, но не является константой временной компиляции. Ей можно присваивать любое значение, которое
  // не является константной, например, можно вернуть какое-то значение из функции.

  final someFinalValue = getDoubleValue();
  print(someFinalValue);

  // final нужно сразу инициализировать
  // final pi; !Ошибка!
  // pi = 123; !Ошибка!

  // final коллекции можно изменять
  final a = [1, 2, 3];
  a.add(4);
  print(a);

  // margin: const EdgeInsets.all(4) Так делается для оптимизации, т.е, если мы поставим const, то внешние поля нашего виджета
  // сохранятся в неизменяемом положении, грубо говоря заморозятся, и они не будут изменяться
}

double getDoubleValue() {
  return 123.324;
}
